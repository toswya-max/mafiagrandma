import streamlit as st
import requests
import os
import time
from io import BytesIO
from datetime import datetime
import base64
from db import get_players, get_role_game, get_alive_players, kill_player
from player import play_audio_queue

# ====== –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ======
API_KEY = "sk_e8f4153f03971e876a5e4f47392f3da2371ee3d837298d8c"
VOICE_ID = "ywL1GEe9JbaEqINm2Qdt"
MODEL_ID = "eleven_multilingual_v2"
LOG_FILE = "logs.txt"

# ====== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ======
st.set_page_config(layout="wide")

# –°–æ—Å—Ç–æ—è–Ω–∏—è
if "mafia_target" not in st.session_state:
    st.session_state.mafia_target = None
if "doctor_target" not in st.session_state:
    st.session_state.doctor_target = None
if "sheriff_target" not in st.session_state:
    st.session_state.sheriff_target = None
if "night_result_shown" not in st.session_state:
    st.session_state.night_result_shown = False


def log_phrase(text):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open(LOG_FILE, "a", encoding="utf-8") as f:
        f.write(f"[{timestamp}] {text}\n")

def get_speech(text):
    headers = {
        "xi-api-key": API_KEY,
        "Content-Type": "application/json"
    }
    data = {
        "text": text,
        "model_id": MODEL_ID,
        "voice_settings": {
            "stability": 0.9,
            "similarity_boost": 0.9
        }
    }
    url = f"https://api.elevenlabs.io/v1/text-to-speech/{VOICE_ID}?optimize_streaming_latency=0"
    response = requests.post(url, headers=headers, json=data)
    if response.status_code == 200:
        log_phrase(text)
        return BytesIO(response.content)
    else:
        st.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ: {response.status_code}")
        return None

def autoplay_audio(audio_bytes):
    b64 = base64.b64encode(audio_bytes.getvalue()).decode()
    audio_html = f"""
        <audio autoplay id="my-audio" style="display:none">
            <source src="data:audio/mp3;base64,{b64}" type="audio/mp3">
        </audio>
        <script>
            const audio = document.getElementById("my-audio");
            if (audio) {{
                audio.play().catch(e => console.log(e));
            }}
        </script>
    """
    st.components.v1.html(audio_html, height=0)

# ====== –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ======

st.header("üåô –ù–æ—á–Ω–∞—è —Ñ–∞–∑–∞")

st.subheader("üó£ –ë—ã—Å—Ç—Ä—ã–µ —Ñ—Ä–∞–∑—ã")

def audio(mp3_path):
    with open(mp3_path, "rb") as f:
        audio_data = f.read()
        return audio_data

co1, co2, co3, co4, co5 = st.columns(5)
with co1:
    if st.button("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"):
        audio_mp3 = "mafia/history.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        play_audio_queue(audio_mp3, "songs/background.mp3")
    if st.button("–ü–æ–±–µ–¥–∏–ª–∞ –º–∞—Ñ–∏—è"):
        audio_mp3 = "songs/background.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)
    if st.button("–ü–æ–±–µ–¥–∏–ª–∏ –º–∏—Ä–Ω—ã–µ"):
        audio_mp3 = "songs/Jann - Arachnophobia.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)

with co2:
    if st.button("–ì–æ—Ä–æ–¥ –∑–∞—Å—ã–ø–∞–µ—Ç"):
        audio_mp3 = "mafia/city_1.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        
        autoplay_audio(audio_bytes)
    if st.button("–ì–æ—Ä–æ–¥ –ø—Ä–æ—Å—ã–ø."):
        audio_mp3 = "mafia/city_2.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)

with co3:
    if st.button("–ú–∞—Ñ–∏—è –ø—Ä–æ—Å—ã–ø."):
        audio_mp3 = "mafia/mafia_1.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)
    if st.button("–ú–∞—Ñ–∏—è –∑–∞—Å—ã–ø–∞–µ—Ç"):
        audio_mp3 = "mafia/mafia_2.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)

with co4:
    if st.button("–î–æ–∫—Ç–æ—Ä –ø—Ä–æ—Å—ã–ø."):
        audio_mp3 = "mafia/doctor_1.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)
    if st.button("–î–æ–∫—Ç–æ—Ä –∑–∞—Å—ã–ø–∞–µ—Ç"):
        audio_mp3 = "mafia/doctor_2.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)

with co5:
    if st.button("–®–µ—Ä–∏—Ñ –ø—Ä–æ—Å—ã–ø."):
        audio_mp3 = "mafia/sherif_1.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)
    if st.button("–®–µ—Ä–∏—Ñ –∑–∞—Å—ã–ø–∞–µ—Ç"):
        audio_mp3 = "mafia/sherif_2.mp3"
        audio_bytes = BytesIO(audio(audio_mp3))
        autoplay_audio(audio_bytes)

st.markdown("---")
def get_players_by_role(role):
    return [row for row in get_players() if row[4].lower() == role.lower()]

# –°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
special_roles = ["–º–∞—Ñ–∏—è", "–¥–æ–∫—Ç–æ—Ä", "—à–µ—Ä–∏—Ñ"]

# –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —Ä–æ–ª—è–º
mafia_players = get_players_by_role("–º–∞—Ñ–∏—è")
doctor_players = get_players_by_role("–¥–æ–∫—Ç–æ—Ä")
sheriff_players = get_players_by_role("—à–µ—Ä–∏—Ñ")


st.subheader("üïµÔ∏è –î–µ–π—Å—Ç–≤–∏—è —Ä–æ–ª–µ–π:")


alive_players = get_alive_players()
if alive_players:
    with st.form(key="night_form"):
        col1, col2, col3 = st.columns(3)
        player_names = [f"{row['name']} | {row['role_name']}" for row in alive_players]

        with col1:
            mafia_select = st.selectbox("–ú–∞—Ñ–∏—è –≤—ã–±–∏—Ä–∞–µ—Ç", [""] + player_names)
        with col2:
            doctor_select = st.selectbox("–î–æ–∫—Ç–æ—Ä –≤—ã–±–∏—Ä–∞–µ—Ç", [""] + player_names)
        with col3:
            sheriff_select = st.selectbox("–®–µ—Ä–∏—Ñ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç", [""] + player_names)
            sheriff_kill = st.selectbox("–∏–ª–∏ –®–µ—Ä–∏—Ñ —É–±–∏–≤–∞–µ—Ç", [""] + player_names)

        submitted = st.form_submit_button("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–æ—á—å")
else:
    st.warning("–ù–µ—Ç –∂–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.")

if submitted:
    if sheriff_select and sheriff_kill:
        st.warning("‚ö†Ô∏è –®–µ—Ä–∏—Ñ –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–ª–∏ —É–±–∏—Ç—å.")
    elif not mafia_select or not doctor_select or not (sheriff_select or sheriff_kill):
        st.warning("‚ö†Ô∏è –í—Å–µ —Ä–æ–ª–∏ –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª—å!")
    else:
        st.session_state.mafia_target = mafia_select
        st.session_state.doctor_target = doctor_select
        st.session_state.sheriff_target = sheriff_select
        st.session_state.sheriff_kill = sheriff_kill
        st.session_state.night_result_shown = True

# === –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–∏ ===
if st.session_state.night_result_shown:
    mafia = st.session_state.mafia_target
    doctor = st.session_state.doctor_target
    sheriff1 = st.session_state.sheriff_target
    sheriff2 = st.session_state.sheriff_kill
    if sheriff1:
        sheriff = sheriff1
    if sheriff2:
        sheriff = sheriff2
    st.markdown("---")
    st.subheader("üìù –ò—Ç–æ–≥–∏ –Ω–æ—á–∏")
    
    mafia, rolename = mafia.split(' | ')
    doctor, rolename1 = doctor.split(' | ')
    sheriff, rolename2 = sheriff.split(' | ')
    phrase = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –¥—Ä—É–∑—å—è! –î–∞–≤–∞–π—Ç–µ –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏ –Ω–æ—á–∏."
    # –£–±–∏—Ç –∏–ª–∏ –Ω–µ—Ç
    if mafia == doctor:
        st.success("–ù–∏–∫—Ç–æ –Ω–µ –ø–æ–≥–∏–± ‚Äî –¥–æ–∫—Ç–æ—Ä —Å–ø–∞—Å —Ü–µ–ª—å –º–∞—Ñ–∏–∏.")
        phrase += "–≠—Ç–æ–π –Ω–æ—á—å—é –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–≥–∏–±."
    else:
        st.error(f"–ü–æ–≥–∏–± {rolename}")
        kill_player(rolename)
        phrase += f"–°–µ–≥–æ–¥–Ω—è –Ω–æ—á—å—é –ø–æ–≥–∏–± {rolename}."
    role = get_role_game(rolename2)[0]
    if sheriff1:
        st.info(f"üîç –®–µ—Ä–∏—Ñ –ø—Ä–æ–≤–µ—Ä–∏–ª: {rolename2} ‚Äî {role}")
        if role == "–î–æ–∫—Ç–æ—Ä":
            role = "–º–∏—Ä–Ω—ã–π"
        phrase += f"–ê —Ç–∞–∫–∂–µ —à–µ—Ä–∏—Ñ –ø—Ä–æ–≤–µ—Ä–∏–ª {rolename2}, –æ–Ω –æ–∫–∞–∑–∞–ª—Å—è {role}."
    elif sheriff2:
        if sheriff2 == doctor:
            st.success("–ù–∏–∫—Ç–æ —Å–µ–≥–æ–¥–Ω—è –Ω–µ —É–º–µ—Ä –±–ª–∞–≥–æ–¥–∞—Ä—è –¥–æ–∫—Ç–æ—Ä—É.")
            phrase += f"–ï—Å–ª–∏ –±—ã –Ω–µ –¥–æ–∫—Ç–æ—Ä, —Ç–æ —Å–µ–≥–æ–¥–Ω—è –±—ã –∫—Ç–æ-—Ç–æ —É–º–µ—Ä –æ—Ç —Ä—É–∫ —à–µ—Ä–∏—Ñ–∞."
        else:
            st.error(f"–®–µ—Ä–∏—Ñ —É–±–∏–ª {rolename2}")
            kill_player(rolename2)
            phrase += f"–ê —Ç–∞–∫–∂–µ —à–µ—Ä–∏—Ñ —É–±–∏–ª {rolename2}, –æ–Ω –æ–∫–∞–∑–∞–ª—Å—è {role}."
    phrase += f"–ß—É—Ç—å –Ω–µ –∑–∞–±—ã–ª, –Ω–∞—à –¥–æ–∫—Ç–æ—Ä —Å–µ–≥–æ–¥–Ω—è –∏–∑–ª–µ—á–∏–ª {rolename1}. –í—Å–µ–º —É–¥–∞—á–Ω–æ–≥–æ –¥–Ω—è, –Ω–∞–¥–µ—é—Å—å, –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ—Ç –≤—ã—Ö–æ–¥!"

    # –û–∑–≤—É—á–∫–∞
    if st.button("üîä –û–∑–≤—É—á–∏—Ç—å –∏—Ç–æ–≥–∏"):
        audio_bytes = get_speech(phrase)
        autoplay_audio(audio_bytes)

    # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –Ω–æ—á–∏
    if st.button("‚ôªÔ∏è –°–ª–µ–¥—É—é—â–∞—è –Ω–æ—á—å"):
        for key in ["mafia_target", "doctor_target", "sheriff_target", "night_result_shown"]:
            st.session_state[key] = None
        st.rerun()

