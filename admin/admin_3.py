import streamlit as st
import pandas as pd
from db import get_data_as_dataframe, sync_database
import os
LOG_FILE = "logs.txt"

st.header("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")

st.header("üìù –¢–∞–±–ª–∏—Ü–∞ –∏–≥—Ä–æ–∫–æ–≤")
st.set_page_config(layout="wide")
df = get_data_as_dataframe()
filter_status = st.selectbox("–ü–æ–∫–∞–∑–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º:", ["–í—Å–µ", "–ñ–∏–≤–æ–π", "–ú—ë—Ä—Ç–≤—ã–π"])
if filter_status != "–í—Å–µ":
    df = df[df["status"] == filter_status]
def highlight_status(row):
    color = "green" if row["status"] == "–ñ–∏–≤–æ–π" else "red"
    return [f"background-color: {color}; color: white;" if col == "status" else "" for col in row.index]
styled_df = df.style.apply(highlight_status, axis=1)

edited_df = st.data_editor(
    df,
    num_rows="dynamic",
    column_config={
        "id": st.column_config.NumberColumn("ID", disabled=True), # –ó–∞–ø—Ä–µ—â–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ID
        "code": st.column_config.NumberColumn("–ò–ù–ù", required=True),
        "name": st.column_config.TextColumn("–ê–∫—Ç–µ—Ä", required=False),
        "role_name": st.column_config.TextColumn("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏", required=True),
        "role": st.column_config.TextColumn("–†–æ–ª—å", required=True),
        "description": st.column_config.TextColumn("–û–ø–∏—Å–∞–Ω–∏–µ", required=True),
        "status": st.column_config.TextColumn("–°—Ç–∞—Ç—É—Å", disabled=True),
    },
    use_container_width=True,
    key="data_editor"
)

if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", type="primary"):
    try:
        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π DataFrame
        sync_database(edited_df)
        st.success("–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö! ‚úÖ")
        # –û—á–∏—â–∞–µ–º –∫—ç—à, —á—Ç–æ–±—ã –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –¥–µ–π—Å—Ç–≤–∏–∏
        st.cache_data.clear()
    except Exception as e:
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")

st.markdown("---")
st.subheader("üìú –ñ—É—Ä–Ω–∞–ª –æ–∑–≤—É—á–µ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑")

if os.path.exists(LOG_FILE):
    with open(LOG_FILE, "r", encoding="utf-8") as f:
        logs = f.read()
        st.text_area("–õ–æ–≥ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):", "\n".join(logs.strip().splitlines()[-20:]), height=200,  disabled=True)
else:
    st.info("–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –æ–∑–≤—É—á–∏–≤–∞–ª–æ—Å—å.")